% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_define_extract.R
\name{define_extract_cps}
\alias{define_extract_cps}
\title{Define an IPUMS CPS extract request}
\usage{
define_extract_cps(
  description,
  samples,
  variables,
  data_format = "fixed_width",
  data_structure = "rectangular",
  rectangular_on = NULL
)
}
\arguments{
\item{description}{Description of the extract.}

\item{samples}{Character vector of sample names to include in the extract.
Samples should be specified using IPUMS CPS
\href{https://cps.ipums.org/cps-action/samples/sample_ids}{sample ID values}.}

\item{variables}{Character vector of variable names or a list of
\code{ipums_variable} objects created by \code{\link[=new_variable]{new_variable()}}
containing specifications for all variables to include in the extract.}

\item{data_format}{Format for the output extract data file. One of
\code{"fixed_width"}, \code{"csv"}, \code{"stata"}, \code{"spss"}, or \code{"sas9"}. Defaults to
\code{"fixed_width"}.}

\item{data_structure}{Data structure for the output the extract data.

\code{"rectangular"} provides person records with all requested household
information attached to respective household members.

\code{"hierarchical"} provides household records followed by person records.}

\item{rectangular_on}{If \code{data_structure} is \code{"rectangular"},
records on which to rectangularize. Currently only \code{"P"} (person records)
is supported.

Defaults to \code{"P"} if \code{data_structure} is \code{"rectangular"} and \code{NULL}
otherwise.}
}
\value{
An object of class \code{\link[=ipums_extract-class]{cps_extract}} containing
the extract definition.
}
\description{
Define the parameters of an IPUMS CPS extract request to be submitted via the
IPUMS API.

Use the \code{\link[=new_variable]{new_variable()}} helper to generate detailed variable-level
specifications for an extract.

Learn more about the IPUMS API in \code{vignette("ipums-api")}.
}
\examples{
cps_extract <- define_extract_cps(
  description = "Example CPS extract definition",
  samples = c("cps2020_02s", "cps2020_03s"),
  variables = c("AGE", "SEX", "YEAR")
)

cps_extract

# Use `new_variable()` to created detailed variable specifications:
define_extract_cps(
  description = "Example CPS extract definition",
  samples = c("cps2020_02s", "cps2020_03s"),
  variables = new_variable(
    "SEX",
    case_selections = "2",
    attached_characteristics = c("mother", "father")
  )
)

# For multiple variables, provide a list of `ipums_variable` objects and/or
# variable names.
cps_extract <- define_extract_cps(
  description = "Example CPS extract definition",
  samples = c("cps2020_02s", "cps2020_03s"),
  variables = list(
    new_variable("AGE", data_quality_flags = TRUE),
    new_variable("SEX", case_selections = "2"),
    "RACE"
  )
)

# To recycle specifications to many variables, it may be useful to
# create variables prior to defining the extract:
var_names <- c("AGE", "SEX")

var_spec <- purrr::map(
  var_names,
  ~ new_variable(.x, data_quality_flags = TRUE)
)

define_extract_cps(
  description = "Extract definition with predefined variables",
  samples = c("cps2020_02s", "cps2020_03s"),
  variables = var_spec
)

# Extract specifications can be indexed by name
names(cps_extract$samples)

names(cps_extract$variables)

cps_extract$variables$AGE

\dontrun{
# Use the extract definition to submit an extract request to the API
submit_extract(cps_extract)
}
}
\seealso{
\code{\link[=submit_extract]{submit_extract()}}, \code{\link[=download_extract]{download_extract()}}, and \code{\link[=get_extract_info]{get_extract_info()}} to
process and manage an extract request.

\code{\link[=save_extract_as_json]{save_extract_as_json()}} and \code{\link[=define_extract_from_json]{define_extract_from_json()}} to share an
extract definition.

\code{\link[=add_to_extract.cps_extract]{add_to_extract()}},
\code{\link[=remove_from_extract.cps_extract]{remove_from_extract()}}, and
\code{\link[=combine_extracts]{combine_extracts()}} to
revise an extract definition.
}
